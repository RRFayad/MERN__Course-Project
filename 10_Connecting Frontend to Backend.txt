Main Goals:
    - Send HTTP Requests and Use Response Data
    - Handle Erros and loading State
    - Update User Interface

Big Steps:

    * Max adjusted the DB Url to start a new one
    
    
    1.  Fetching data functions: 
        * We started wit Create user (sign up method in the Auth page)
        * mainly because we need the user for the other data logic in the Models

        * It will return a error of CORS
            ** CORS is a security mechanism for the backend only accept requests from the same server (which obviously conflicts with an API idea)
    
        * remember to create an ascyn function,l and then run it, to not make the useEffect async
    
    2. BackEnd: Add the CORS Middleware
        - It will set header for:
            allow origin of the requests (the browsers do not receive req ou res from other domains);
            allow header (th etyoe of headers of the requests)
            allow methods

    3. Back to the create user (actually to any fetch function)
        - Loading state
            - Set logic for manage a state of loading (while waiting the response), and while that, show a loading spinner
        
        - Handle errors
            - When fetching, set an if(!response.ok) throw new Error
                * Basically, whgen we receive a 400ish or 500ish response (not found), technically it's not an error, just a response.
                * But for our purposes it's an error, so we should crete logic for that, recogninzing the response.ok value
    
        * Check "Auth__old.js" - With the logic beore the custom hook
    
    4. Create a custom hook for the Http Requests
        - Check http-hook

     


    

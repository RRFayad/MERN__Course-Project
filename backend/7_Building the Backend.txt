88. Intro
    - Set Up Node & Express App
    - Add ROutes
    - Controllers (with Dummy logic while we have no Database yet)
    - Add Inputs Validation

89. Setting Up our Project
    - installed express and body-parser
    - installed nodemon for development envirornment

90. Implementing Basic Routing & 91. Adding Place-Specific Routes
    
    - Creating routes folder, with a file for the routes of each model
    - Create the Router
    - Import it to the router, and organize
        * think about the route filter logic - app.use('api/places', placesRoutes)

93. Handling Errors

    - In our example (the error handling in the places route / controller):
        - Create a response setting the status 404 ('Not found'), and a message;
            * Remembering that the default status is 200 for success
        
        - e.g.:
              if (!place) {
                    return res
                    .status(404)
                    .json({ message: "Could not find a place for the provided Id." });
                }
                res.json(place);

        - Refactoring error handling:
            - If we do this for each logic, will be a lot of code duplication;
            - Express has is own way to do it:
                
                1. Set own error middleware in the app
                    * The error middleware has 4 args, with the 1st being the error
                
                2. Set the error trigger
                    - For sync code, it could be to throw an error, or to call next instead of sending a response
                    - For async (usual with DB), use next()
        
        - It would be even better if we crete our own error model

94. Adding our own Error Model

    - We created an customized class Model for our errors (and refactored the error handling code)


* in 96. We installed uuid for generating unique Id's
    const { v4: uuid } = require("uuid");
    id:uuid()

97. Handling Error for Unsuportted routes
    - Created a last middleware that returns a 404 error

100. Finalizing the "Get Places by User ID" Resource

    

